name: test run hydra-genetics commands

# Controls when the action will run.
on:
   # Triggers the workflow on push or pull request events but only for the master and develop branch
  push:
    branches:
     - develop
     - master
  pull_request:
    branches:
     - develop
     - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  python_code:
    name: run hydra-genetics commands
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install hydra genetics
        run: |
          pip install -e .
      - name: Create module
        run: hydra-genetics create-pipeline -n testar -d "test description" -a testare -e testar@mail.com -g testare
      - name: Create rule
        run: hydra-genetics create-rule -c test2 -t samtools -m testar -a testare2 -e testare2@mail.com
      - name: Add rule to existing smk file
        run: hydra-genetics create-rule -c test3 -t samtools -m testar -a testare2 -e testare2@mail.com
      - name: Create input files v1
        run: hydra-genetics create-input-files  -d .tests/ -p Illumina -s "([A-Za-z0-9]+_testing[0-9])_" -n "_R([12])" --nreads 10 --every 1
      - name: Create input files v2
        run: hydra-genetics create-input-files -f  -d .tests/ -p Illumina -s "([A-Za-z0-9]+_testing[0-9])_" -n "_R([12])" --nreads 10 --every 1 --tc 1.0
      - name: Create input files v3
        run: hydra-genetics create-input-files -f  -d .tests/ -p Illumina -s "([A-Za-z0-9]+_testing[0-9])_" -n "_R([12])" --nreads 10 --every 1 --data-json .tests/integration/samples_and_settings.json --data-columns .tests/integration/columns_added_to_tsv_files.json 
      - name: Create input files v4
        run: hydra-genetics create-input-files -f -d .tests/ -p PACBIO --data-json .tests/integration/pacbio_bams/samples_and_settings.json --data-columns .tests/integration/pacbio_bams/columns_added_to_tsv_files.json
      - name: Create pipeline
        run: hydra-genetics create-pipeline -n test_pipeline -d test -a S -e p -g t
      - name: Add rule
        run: hydra-genetics create-rule -c rule1234 -m test_pipeline -a s -e g
      - name: Add rule belonging to a tool
        run: hydra-genetics create-rule -c rule1234 -t my_tool -m test_pipeline -a s -e g 
      - name: Add additional rule to tool
        run: hydra-genetics create-rule -c rule5231 -t my_tool -m test_pipeline -a s -e g 
      - name: Download references
        run: hydra-genetics  references download -v tests/utils/files/validation.yaml -v tests/utils/files/validation.json -o test_new
      - name: Validate references
        run: hydra-genetics references validate -c tests/utils/files/configs.yaml -c tests/utils/files/configs.ref.yaml -c tests/utils/files/configs.rna.yaml -v tests/utils/files/validation.json -v tests/utils/files/validation.yaml -v tests/utils/files/validation.json -p test_new
      - name: "Download, include compressed data"
        run: hydra-genetics --debug --verbose references download --validation-file tests/utils/files/references_fetch.yaml
      - name: "Validate, include compressed data"
        run: hydra-genetics --debug references validate -c tests/utils/files/references_config.yaml -v tests/utils/files/references_fetch.yaml
      - name: "Download, split data"
        run: hydra-genetics --debug --verbose references download --validation-file tests/utils/files/references_divided_file_fetch.yaml
      - name: "Validate, split data"
        run: hydra-genetics --debug references validate -c tests/utils/files/references_config.yaml -v tests/utils/files/references_divided_file_fetch.yaml